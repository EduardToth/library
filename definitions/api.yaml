openapi: "3.0.0"
info:
  version: 1.0.0
  title: LibraryAPI
paths:
  /:
    get:
      description: Returns "Hello world"
      operationId: "getHelloWorldMessage"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                type: string
        404:
          description: "Message not found"
        "5XX":
          description: Unexpected Error

  /book:
    get:
      operationId: getAllBooks
      description: it retrieves all books from the database
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
        404:
          description: books could not be accessed
        "5XX":
          description: Unexpected error
    post:
      operationId: "createBook"
      description: This endpoint creates a new book in the database
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/BookContent"
      responses:
        201:
          description: "Created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Book"
        400:
          description: "Bad request"
        "5XX":
          description: Unexpected error

  /book/{id}:
    get:
      operationId: getBook
      description: Gets a book after a given id
      parameters:
        - $ref: "#/components/parameters/bookId"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Book"
        404:
          description: Book not found
        "5XX":
          description: Unexpected Error
    delete:
      operationId: deleteBook
      description: This will delete a book after its id
      parameters:
        - $ref: "#/components/parameters/bookId"
      responses:
        204:
          description: no content
        404:
          description: not found
    put:
      operationId: updateBook
      description: This endpoint will update a book entity
      parameters:
        - $ref: "#/components/parameters/bookId"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/BookContent"
      responses:
        200:
          description: Book resource updated
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Book"
        409:
          description: Conflict
        "5XX":
          description: Unexpected error occured

  /author:
    post:
      operationId: createAuthor
      description: This endpoint will create a new author entity
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/AuthorContent"
      responses:
        201:
          description: "Created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Author"
        400:
          description: "Bad request"
        "5XX":
          description: Unexpected error

    get:
      operationId: getAllAuthors
      description: This endpoint will return all the stored authors
      responses:
        "200":
          description: "OK"
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"
        "404":
          description: the authors could not be found
        "5XX":
          description: Unexpected error

  /author/{id}:
    put:
      operationId: modifyAuthor
      description: This endpoint will modify an author entity
      parameters:
        - $ref: "#/components/parameters/authorId"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/AuthorContent"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Author"
        409:
          description: Conflict
        "5XX":
          description: Unexpected error occured

    get:
      operationId: getAuthor
      description: This endpoint will return an existing author after its id
      parameters:
        - $ref: "#/components/parameters/authorId"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Author"
        404:
          description: "Not Found"
        "5XX":
          description: Unexpected error occured

    delete:
      operationId: deleteAuthor
      description: This endpoint deletes an author after a given id
      parameters:
        - $ref: "#/components/parameters/authorId"
      responses:
        204:
          description: "No Content"
        404:
          description: "Author not found"
        "5XX":
          description: Unexpected error occured

  # create the corresponding endpoints for getBookShelf, getAllBookShelves, modifyBookShelf, deleteBookShelf, createBookShelf
  /book-shelf:
    get:
      operationId: getAllBookShelves
      description: This endpoint will retrieve all bookshelves from the database
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BookShelf"
        404:
          description: "Not Found"
        "5XX":
          description: Unexpected error

    post:
      operationId: createBookShelf
      description: This endpoint will create a new bookshelf inside of a library
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/BookShelfContent"
      responses:
        201:
          description: "Created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BookShelfContent"
        400:
          description: "Bad request"
        "5XX":
          description: Unexpected error

  /book-shelf/{id}:
    get:
      operationId: getBookShelf
      description: This endpoint will retrieve a bookshelf with its corresponding books after a given id
      parameters:
        - $ref: "#/components/parameters/bookShelfId"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BookShelf"
        404:
          description: Not Found
        "5XX":
          description: Unexpected error occured

    put:
      operationId: modifyBookShelf
      description: This endpoint will modify a bookshelf
      parameters:
        - $ref: "#/components/parameters/bookShelfId"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/BookShelfContent"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/BookShelf"
        409:
          description: Conflict
        "5XX":
          description: Unexpected error occured

    delete:
      operationId: deleteBookShelf
      description: This endpoint will delete a bookshelf after a given id
      parameters:
        - $ref: "#/components/parameters/bookShelfId"
      responses:
        204:
          description: "No Content"
        404:
          description: "Bookshelf not found"
        "5XX":
          description: Unexpected error occured

  # create the corresponding endpoints for createLibrary, getAllLibraries, getLibrary, modifyLibrary, deleteLibrary

  /library:
    post:
      operationId: createLibrary
      description: This endpoint creates a new library in the database
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/LibraryContent"
      responses:
        201:
          description: "Created"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Library"
        400:
          description: "Bad request"
        "5XX":
          description: Unexpected error

    get:
      operationId: getAllLibraries
      description: This endpoint will retrieve all libraries from the database
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Library"
        404:
          description: "Not Found"
        "5XX":
          description: Unexpected error

  /library/{id}:
    get:
      operationId: getLibrary
      description: This endpoint will retrieve a library from the database after a given id
      parameters:
        - $ref: "#/components/parameters/library"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Library"
        404:
          description: Not Found
        "5XX":
          description: Unexpected error occured

    put:
      operationId: modifyLibrary
      description: This endpoint will modify an existing library
      parameters:
        - $ref: "#/components/parameters/library"
      requestBody:
        required: true
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/LibraryContent"
      responses:
        200:
          description: "OK"
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Library"
        409:
          description: Conflict
        "5XX":
          description: Unexpected error occured

    delete:
      operationId: deleteLibrary
      description: This endpoint will delete a library after an id
      parameters:
        - $ref: "#/components/parameters/library"
      responses:
        204:
          description: No Content
        404:
          description: Library not found
        "5XX":
          description: Unexpected error occured

components:
  schemas:
    AuthorContent:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    Author:
      allOf:
        - $ref: "#/components/schemas/AuthorContent"
        - type: object
          properties:
            id:
              type: string
            booksWritten:
              type: array
              items:
                $ref: "#/components/schemas/Book"
          required:
            - id
            - booksWritten

    BookContent:
      type: object
      properties:
        title:
          type: string
        numberOfPages:
          type: number
        authorId:
          type: string
        bookShelfId:
          type: string
      required:
        - title
        - numberOfPages
        - authorId
        - bookShelfId

    Book:
      allOf:
        - $ref: "#/components/schemas/BookContent"
        - type: object
          properties:
            id:
              type: string
          required:
            - id

    BookShelfContent:
      type: object
      properties:
        libraryId:
          type: string
      required:
        - libraryId

    BookShelf:
      allOf:
        - $ref: "#/components/schemas/BookShelfContent"
        - type: object
          properties:
            id:
              type: string
            books:
              type: array
              items:
                $ref: "#/components/schemas/Book"
          required:
            - id
            - books

    LibraryContent:
      type: object
      properties:
        name:
          type: string
      required:
        - name

    Library:
      allOf:
        - $ref: "#/components/schemas/LibraryContent"
        - type: object
          properties:
            id:
              type: string
            name:
              type: string
            bookShelves:
              type: array
              items:
                $ref: "#/components/schemas/BookShelf"
          required:
            - id
            - bookShelves
  parameters:
    bookId:
      name: id
      in: path
      required: true
      description: The id of the book
      schema:
        type: string

    authorId:
      name: id
      in: path
      required: true
      description: The id of the author
      schema:
        type: string

    bookShelfId:
      name: id
      in: path
      required: true
      description: The id of the bookshelf
      schema:
        type: string

    libraryId:
      name: id
      in: path
      required: true
      description: The id of the library
      schema:
        type: string
